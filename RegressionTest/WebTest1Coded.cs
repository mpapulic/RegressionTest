//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegressionTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using PluginLibrary;


    public class WebTest1Coded : WebTest
    {

        public WebTest1Coded()
        {
            this.Context.Add("First Name", "WEBTEST-001");
            this.Context.Add("Last Name", "OYEZGATEWAY");
            this.Context.Add("email", "wd.milan.papulic@gowi.rs");
            this.Context.Add("UserGUID", "");
            this.Context.Add("WebServer1", "http://oyezgateway.test.gowi.rs");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/"));
            request1.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Account/Login");
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Account/Login"));
            request2.Method = "POST";
            request2.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/Report");
            request2.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Account/Login")));
            FormPostHttpBody request2Body = new FormPostHttpBody();
            request2Body.FormPostParameters.Add("ReturnUrl", this.Context["$HIDDEN1.ReturnUrl"].ToString());
            request2Body.FormPostParameters.Add("UserName", "admin.milan.papulic@gowi.rs");
            request2Body.FormPostParameters.Add("Password", "password");
            request2.Body = request2Body;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User"));
            request3.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Report")));
            WebTestRequest request3Dependent1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request3Dependent1.ThinkTime = 2;
            request3Dependent1.Method = "POST";
            request3Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request3Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request3Dependent1.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request3Dependent1Body = new FormPostHttpBody();
            request3Dependent1Body.FormPostParameters.Add("draw", "1");
            request3Dependent1Body.FormPostParameters.Add("columns[0][data]", "0");
            request3Dependent1Body.FormPostParameters.Add("columns[0][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[0][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[1][data]", "1");
            request3Dependent1Body.FormPostParameters.Add("columns[1][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[1][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[2][data]", "2");
            request3Dependent1Body.FormPostParameters.Add("columns[2][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[2][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[3][data]", "3");
            request3Dependent1Body.FormPostParameters.Add("columns[3][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[3][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[4][data]", "4");
            request3Dependent1Body.FormPostParameters.Add("columns[4][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[4][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[5][data]", "5");
            request3Dependent1Body.FormPostParameters.Add("columns[5][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[5][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[6][data]", "6");
            request3Dependent1Body.FormPostParameters.Add("columns[6][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[6][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[7][data]", "7");
            request3Dependent1Body.FormPostParameters.Add("columns[7][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[7][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[8][data]", "8");
            request3Dependent1Body.FormPostParameters.Add("columns[8][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[8][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[9][data]", "9");
            request3Dependent1Body.FormPostParameters.Add("columns[9][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[9][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[10][data]", "10");
            request3Dependent1Body.FormPostParameters.Add("columns[10][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[10][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[11][data]", "11");
            request3Dependent1Body.FormPostParameters.Add("columns[11][name]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request3Dependent1Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request3Dependent1Body.FormPostParameters.Add("columns[11][search][value]", "");
            request3Dependent1Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request3Dependent1Body.FormPostParameters.Add("order[0][column]", "1");
            request3Dependent1Body.FormPostParameters.Add("order[0][dir]", "asc");
            request3Dependent1Body.FormPostParameters.Add("start", "0");
            request3Dependent1Body.FormPostParameters.Add("length", "10");
            request3Dependent1Body.FormPostParameters.Add("search[value]", "");
            request3Dependent1Body.FormPostParameters.Add("search[regex]", "false");
            request3Dependent1.Body = request3Dependent1Body;
            request3.DependentRequests.Add(request3Dependent1);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/Edit"));
            request4.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            ExtractHiddenFields extractionRule2 = new ExtractHiddenFields();
            extractionRule2.Required = true;
            extractionRule2.HtmlDecode = true;
            extractionRule2.ContextParameterName = "1";
            request4.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/UserEmailAddressIsAvailable"));
            request5.ThinkTime = 10;
            request5.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request5.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request5.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User/Edit")));
            request5.QueryStringParameters.Add("Email", this.Context["email"].ToString(), false, false);
            request5.QueryStringParameters.Add("Guid", this.Context["$HIDDEN1.Guid"].ToString(), false, false);
            UserEditExtractPlugin extractionRule3 = new UserEditExtractPlugin();
            this.Context.Add("UserGUID", this.Context["$HIDDEN1.Guid"].ToString());
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/Edit"));
            request6.Method = "POST";
            request6.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/User");
            request6.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User/Edit")));
            FormPostHttpBody request6Body = new FormPostHttpBody();
            request6Body.FormPostParameters.Add("Guid", this.Context["UserGUID"].ToString());
            request6Body.FormPostParameters.Add("FirstName", this.Context["First Name"].ToString());
            request6Body.FormPostParameters.Add("LastName", this.Context["Last Name"].ToString());
            request6Body.FormPostParameters.Add("Email", this.Context["email"].ToString());
            request6Body.FormPostParameters.Add("GroupList.SelectedGroupIds", "225");
            request6Body.FormPostParameters.Add("selectItem", "225");
            request6Body.FormPostParameters.Add("IsDesignatedApprover", this.Context["$HIDDEN1.IsDesignatedApprover"].ToString());
            request6Body.FormPostParameters.Add("CanSubmit", "true");
            request6Body.FormPostParameters.Add("CanSubmit", this.Context["$HIDDEN1.CanSubmit"].ToString());
            request6Body.FormPostParameters.Add("CanApprove", "true");
            request6Body.FormPostParameters.Add("CanApprove", this.Context["$HIDDEN1.CanApprove"].ToString());
            request6Body.FormPostParameters.Add("IsAdmin", "true");
            request6Body.FormPostParameters.Add("IsAdmin", this.Context["$HIDDEN1.IsAdmin"].ToString());
            request6Body.FormPostParameters.Add("IsActive", "true");
            request6Body.FormPostParameters.Add("IsActive", this.Context["$HIDDEN1.IsActive"].ToString());
            request6Body.FormPostParameters.Add("LinkTimeout", "167");
            request6Body.FormPostParameters.Add("UserGUID", this.Context["$HIDDEN1.Guid"].ToString());
            request6.Body = request6Body;
            WebTestRequest request6Dependent1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request6Dependent1.ThinkTime = 10;
            request6Dependent1.Method = "POST";
            request6Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request6Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request6Dependent1.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request6Dependent1Body = new FormPostHttpBody();
            request6Dependent1Body.FormPostParameters.Add("draw", "1");
            request6Dependent1Body.FormPostParameters.Add("columns[0][data]", "0");
            request6Dependent1Body.FormPostParameters.Add("columns[0][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[0][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[1][data]", "1");
            request6Dependent1Body.FormPostParameters.Add("columns[1][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[1][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[2][data]", "2");
            request6Dependent1Body.FormPostParameters.Add("columns[2][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[2][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[3][data]", "3");
            request6Dependent1Body.FormPostParameters.Add("columns[3][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[3][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[4][data]", "4");
            request6Dependent1Body.FormPostParameters.Add("columns[4][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[4][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[5][data]", "5");
            request6Dependent1Body.FormPostParameters.Add("columns[5][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[5][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[6][data]", "6");
            request6Dependent1Body.FormPostParameters.Add("columns[6][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[6][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[7][data]", "7");
            request6Dependent1Body.FormPostParameters.Add("columns[7][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[7][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[8][data]", "8");
            request6Dependent1Body.FormPostParameters.Add("columns[8][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[8][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[9][data]", "9");
            request6Dependent1Body.FormPostParameters.Add("columns[9][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[9][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[10][data]", "10");
            request6Dependent1Body.FormPostParameters.Add("columns[10][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[10][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[11][data]", "11");
            request6Dependent1Body.FormPostParameters.Add("columns[11][name]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request6Dependent1Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request6Dependent1Body.FormPostParameters.Add("columns[11][search][value]", "");
            request6Dependent1Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request6Dependent1Body.FormPostParameters.Add("order[0][column]", "1");
            request6Dependent1Body.FormPostParameters.Add("order[0][dir]", "asc");
            request6Dependent1Body.FormPostParameters.Add("start", "0");
            request6Dependent1Body.FormPostParameters.Add("length", "10");
            request6Dependent1Body.FormPostParameters.Add("search[value]", "");
            request6Dependent1Body.FormPostParameters.Add("search[regex]", "false");
            request6Dependent1.Body = request6Dependent1Body;
            request6.DependentRequests.Add(request6Dependent1);
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/Edit"));
            request7.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            request7.QueryStringParameters.Add("guid", this.Context["UserGUID"].ToString(), false, false);
            ExtractHiddenFields extractionRule4 = new ExtractHiddenFields();
            extractionRule4.Required = true;
            extractionRule4.HtmlDecode = true;
            extractionRule4.ContextParameterName = "1";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule4.Extract);
            ExtractFormField extractionRule5 = new ExtractFormField();
            extractionRule5.Name = "LastName";
            extractionRule5.HtmlDecode = true;
            extractionRule5.Required = false;
            extractionRule5.Index = 0;
            extractionRule5.ContextParameterName = "FormPostParam221.LastName";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule5.Extract);
            ExtractFormField extractionRule6 = new ExtractFormField();
            extractionRule6.Name = "Email";
            extractionRule6.HtmlDecode = true;
            extractionRule6.Required = false;
            extractionRule6.Index = 0;
            extractionRule6.ContextParameterName = "FormPostParam222.Email";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule6.Extract);
            ExtractText extractionRule7 = new ExtractText();
            extractionRule7.StartsWith = "lue=\"";
            extractionRule7.EndsWith = "\" />\r";
            extractionRule7.Index = 20;
            extractionRule7.IgnoreCase = false;
            extractionRule7.UseRegularExpression = false;
            extractionRule7.HtmlDecode = true;
            extractionRule7.Required = false;
            extractionRule7.ContextParameterName = "FormPostParam403.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule7.Extract);
            ExtractText extractionRule8 = new ExtractText();
            extractionRule8.StartsWith = "lue=\"";
            extractionRule8.EndsWith = "\" />\r";
            extractionRule8.Index = 20;
            extractionRule8.IgnoreCase = false;
            extractionRule8.UseRegularExpression = false;
            extractionRule8.HtmlDecode = true;
            extractionRule8.Required = false;
            extractionRule8.ContextParameterName = "FormPostParam454.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule8.Extract);
            ExtractText extractionRule9 = new ExtractText();
            extractionRule9.StartsWith = "dex=\"";
            extractionRule9.EndsWith = "\" typ";
            extractionRule9.Index = 4;
            extractionRule9.IgnoreCase = false;
            extractionRule9.UseRegularExpression = false;
            extractionRule9.HtmlDecode = true;
            extractionRule9.Required = false;
            extractionRule9.ContextParameterName = "FormPostParam456.draw";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule9.Extract);
            ExtractText extractionRule10 = new ExtractText();
            extractionRule10.StartsWith = "lue=\"";
            extractionRule10.EndsWith = "\" />\r";
            extractionRule10.Index = 20;
            extractionRule10.IgnoreCase = false;
            extractionRule10.UseRegularExpression = false;
            extractionRule10.HtmlDecode = true;
            extractionRule10.Required = false;
            extractionRule10.ContextParameterName = "FormPostParam505.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule10.Extract);
            ExtractText extractionRule11 = new ExtractText();
            extractionRule11.StartsWith = "lue=\"";
            extractionRule11.EndsWith = "\" />\r";
            extractionRule11.Index = 20;
            extractionRule11.IgnoreCase = false;
            extractionRule11.UseRegularExpression = false;
            extractionRule11.HtmlDecode = true;
            extractionRule11.Required = false;
            extractionRule11.ContextParameterName = "FormPostParam556.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule11.Extract);
            ExtractText extractionRule12 = new ExtractText();
            extractionRule12.StartsWith = "dex=\"";
            extractionRule12.EndsWith = "\" typ";
            extractionRule12.Index = 6;
            extractionRule12.IgnoreCase = false;
            extractionRule12.UseRegularExpression = false;
            extractionRule12.HtmlDecode = true;
            extractionRule12.Required = false;
            extractionRule12.ContextParameterName = "FormPostParam560.draw";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule12.Extract);
            ExtractText extractionRule13 = new ExtractText();
            extractionRule13.StartsWith = "lue=\"";
            extractionRule13.EndsWith = "\" />\r";
            extractionRule13.Index = 20;
            extractionRule13.IgnoreCase = false;
            extractionRule13.UseRegularExpression = false;
            extractionRule13.HtmlDecode = true;
            extractionRule13.Required = false;
            extractionRule13.ContextParameterName = "FormPostParam609.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule13.Extract);
            ExtractText extractionRule14 = new ExtractText();
            extractionRule14.StartsWith = "dex=\"";
            extractionRule14.EndsWith = "\" typ";
            extractionRule14.Index = 7;
            extractionRule14.IgnoreCase = false;
            extractionRule14.UseRegularExpression = false;
            extractionRule14.HtmlDecode = true;
            extractionRule14.Required = false;
            extractionRule14.ContextParameterName = "FormPostParam611.draw";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule14.Extract);
            ExtractText extractionRule15 = new ExtractText();
            extractionRule15.StartsWith = "lue=\"";
            extractionRule15.EndsWith = "\" />\r";
            extractionRule15.Index = 20;
            extractionRule15.IgnoreCase = false;
            extractionRule15.UseRegularExpression = false;
            extractionRule15.HtmlDecode = true;
            extractionRule15.Required = false;
            extractionRule15.ContextParameterName = "FormPostParam660.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule15.Extract);
            ExtractText extractionRule16 = new ExtractText();
            extractionRule16.StartsWith = "dex=\"";
            extractionRule16.EndsWith = "\" typ";
            extractionRule16.Index = 8;
            extractionRule16.IgnoreCase = false;
            extractionRule16.UseRegularExpression = false;
            extractionRule16.HtmlDecode = true;
            extractionRule16.Required = false;
            extractionRule16.ContextParameterName = "FormPostParam662.draw";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule16.Extract);
            ExtractText extractionRule17 = new ExtractText();
            extractionRule17.StartsWith = "lue=\"";
            extractionRule17.EndsWith = "\" />\r";
            extractionRule17.Index = 20;
            extractionRule17.IgnoreCase = false;
            extractionRule17.UseRegularExpression = false;
            extractionRule17.HtmlDecode = true;
            extractionRule17.Required = false;
            extractionRule17.ContextParameterName = "FormPostParam711.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule17.Extract);
            ExtractText extractionRule18 = new ExtractText();
            extractionRule18.StartsWith = "dex=\"";
            extractionRule18.EndsWith = "\" id=";
            extractionRule18.Index = 3;
            extractionRule18.IgnoreCase = false;
            extractionRule18.UseRegularExpression = false;
            extractionRule18.HtmlDecode = true;
            extractionRule18.Required = false;
            extractionRule18.ContextParameterName = "FormPostParam713.draw";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule18.Extract);
            ExtractText extractionRule19 = new ExtractText();
            extractionRule19.StartsWith = "lue=\"";
            extractionRule19.EndsWith = "\" />\r";
            extractionRule19.Index = 20;
            extractionRule19.IgnoreCase = false;
            extractionRule19.UseRegularExpression = false;
            extractionRule19.HtmlDecode = true;
            extractionRule19.Required = false;
            extractionRule19.ContextParameterName = "FormPostParam762.search[regex]";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule19.Extract);
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/UserEmailAddressIsAvailable"));
            request8.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request8.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request8.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User/Edit?guid=ae4166c0-0ac8-4302-a52b-4710e96f187a")));
            request8.QueryStringParameters.Add("Email", this.Context["email"].ToString(), false, false);
            request8.QueryStringParameters.Add("Guid", this.Context["UserGUID"].ToString(), false, false);
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/Edit"));
            request9.Method = "POST";
            request9.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/User");
            request9.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User/Edit?guid=ae4166c0-0ac8-4302-a52b-4710e96f187a")));
            FormPostHttpBody request9Body = new FormPostHttpBody();
            request9Body.FormPostParameters.Add("Guid", this.Context["UserGUID"].ToString());
            request9Body.FormPostParameters.Add("FirstName", (this.Context["First Name"].ToString() + "-edit"));
            request9Body.FormPostParameters.Add("LastName", this.Context["FormPostParam221.LastName"].ToString());
            request9Body.FormPostParameters.Add("Email", this.Context["FormPostParam222.Email"].ToString());
            request9Body.FormPostParameters.Add("LinkTimeout", "167");
            request9Body.FormPostParameters.Add("GroupList.SelectedGroupIds", "225");
            request9Body.FormPostParameters.Add("selectItem", "225");
            request9Body.FormPostParameters.Add("IsDesignatedApprover", this.Context["$HIDDEN1.IsDesignatedApprover"].ToString());
            request9Body.FormPostParameters.Add("CanSubmit", "true");
            request9Body.FormPostParameters.Add("CanSubmit", this.Context["$HIDDEN1.CanSubmit"].ToString());
            request9Body.FormPostParameters.Add("CanApprove", "true");
            request9Body.FormPostParameters.Add("CanApprove", this.Context["$HIDDEN1.CanApprove"].ToString());
            request9Body.FormPostParameters.Add("IsAdmin", "true");
            request9Body.FormPostParameters.Add("IsAdmin", this.Context["$HIDDEN1.IsAdmin"].ToString());
            request9Body.FormPostParameters.Add("IsActive", "true");
            request9Body.FormPostParameters.Add("IsActive", this.Context["$HIDDEN1.IsActive"].ToString());
            request9.Body = request9Body;
            WebTestRequest request9Dependent1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request9Dependent1.ThinkTime = 4;
            request9Dependent1.Method = "POST";
            request9Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request9Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request9Dependent1.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request9Dependent1Body = new FormPostHttpBody();
            request9Dependent1Body.FormPostParameters.Add("draw", "1");
            request9Dependent1Body.FormPostParameters.Add("columns[0][data]", "0");
            request9Dependent1Body.FormPostParameters.Add("columns[0][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[0][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[1][data]", "1");
            request9Dependent1Body.FormPostParameters.Add("columns[1][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[1][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[2][data]", "2");
            request9Dependent1Body.FormPostParameters.Add("columns[2][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[2][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[3][data]", "3");
            request9Dependent1Body.FormPostParameters.Add("columns[3][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[3][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[4][data]", "4");
            request9Dependent1Body.FormPostParameters.Add("columns[4][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[4][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[5][data]", "5");
            request9Dependent1Body.FormPostParameters.Add("columns[5][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[5][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[6][data]", "6");
            request9Dependent1Body.FormPostParameters.Add("columns[6][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[6][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[7][data]", "7");
            request9Dependent1Body.FormPostParameters.Add("columns[7][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[7][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[8][data]", "8");
            request9Dependent1Body.FormPostParameters.Add("columns[8][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[8][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[9][data]", "9");
            request9Dependent1Body.FormPostParameters.Add("columns[9][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[9][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[10][data]", "10");
            request9Dependent1Body.FormPostParameters.Add("columns[10][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[10][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[11][data]", "11");
            request9Dependent1Body.FormPostParameters.Add("columns[11][name]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request9Dependent1Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request9Dependent1Body.FormPostParameters.Add("columns[11][search][value]", "");
            request9Dependent1Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request9Dependent1Body.FormPostParameters.Add("order[0][column]", "1");
            request9Dependent1Body.FormPostParameters.Add("order[0][dir]", "asc");
            request9Dependent1Body.FormPostParameters.Add("start", "0");
            request9Dependent1Body.FormPostParameters.Add("length", "10");
            request9Dependent1Body.FormPostParameters.Add("search[value]", "");
            request9Dependent1Body.FormPostParameters.Add("search[regex]", "false");
            request9Dependent1.Body = request9Dependent1Body;
            request9.DependentRequests.Add(request9Dependent1);
            yield return request9;
            request9 = null;

            WebTestRequest request10 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request10.Method = "POST";
            request10.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request10.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request10.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request10Body = new FormPostHttpBody();
            request10Body.FormPostParameters.Add("draw", "3");
            request10Body.FormPostParameters.Add("columns[0][data]", "0");
            request10Body.FormPostParameters.Add("columns[0][name]", "");
            request10Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request10Body.FormPostParameters.Add("columns[0][search][value]", "");
            request10Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[1][data]", "1");
            request10Body.FormPostParameters.Add("columns[1][name]", "");
            request10Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request10Body.FormPostParameters.Add("columns[1][search][value]", "");
            request10Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[2][data]", "2");
            request10Body.FormPostParameters.Add("columns[2][name]", "");
            request10Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request10Body.FormPostParameters.Add("columns[2][search][value]", "");
            request10Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[3][data]", "3");
            request10Body.FormPostParameters.Add("columns[3][name]", "");
            request10Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request10Body.FormPostParameters.Add("columns[3][search][value]", "");
            request10Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[4][data]", "4");
            request10Body.FormPostParameters.Add("columns[4][name]", "");
            request10Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[4][search][value]", "");
            request10Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[5][data]", "5");
            request10Body.FormPostParameters.Add("columns[5][name]", "");
            request10Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[5][search][value]", "");
            request10Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[6][data]", "6");
            request10Body.FormPostParameters.Add("columns[6][name]", "");
            request10Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[6][search][value]", "");
            request10Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[7][data]", "7");
            request10Body.FormPostParameters.Add("columns[7][name]", "");
            request10Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[7][search][value]", "");
            request10Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[8][data]", "8");
            request10Body.FormPostParameters.Add("columns[8][name]", "");
            request10Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[8][search][value]", "");
            request10Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[9][data]", "9");
            request10Body.FormPostParameters.Add("columns[9][name]", "");
            request10Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[9][search][value]", "");
            request10Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[10][data]", "10");
            request10Body.FormPostParameters.Add("columns[10][name]", "");
            request10Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[10][search][value]", "");
            request10Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request10Body.FormPostParameters.Add("columns[11][data]", "11");
            request10Body.FormPostParameters.Add("columns[11][name]", "");
            request10Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request10Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request10Body.FormPostParameters.Add("columns[11][search][value]", "");
            request10Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request10Body.FormPostParameters.Add("order[0][column]", "1");
            request10Body.FormPostParameters.Add("order[0][dir]", "asc");
            request10Body.FormPostParameters.Add("start", "0");
            request10Body.FormPostParameters.Add("length", "10");
            request10Body.FormPostParameters.Add("search[value]", this.Context["email"].ToString());
            request10Body.FormPostParameters.Add("search[regex]", this.Context["FormPostParam454.search[regex]"].ToString());
            request10.Body = request10Body;
            yield return request10;
            request10 = null;

            WebTestRequest request11 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request11.ThinkTime = 4;
            request11.Method = "POST";
            request11.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request11.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request11.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request11Body = new FormPostHttpBody();
            request11Body.FormPostParameters.Add("draw", "5");
            request11Body.FormPostParameters.Add("columns[0][data]", "0");
            request11Body.FormPostParameters.Add("columns[0][name]", "");
            request11Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request11Body.FormPostParameters.Add("columns[0][search][value]", "");
            request11Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[1][data]", "1");
            request11Body.FormPostParameters.Add("columns[1][name]", "");
            request11Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request11Body.FormPostParameters.Add("columns[1][search][value]", "");
            request11Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[2][data]", "2");
            request11Body.FormPostParameters.Add("columns[2][name]", "");
            request11Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request11Body.FormPostParameters.Add("columns[2][search][value]", "");
            request11Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[3][data]", "3");
            request11Body.FormPostParameters.Add("columns[3][name]", "");
            request11Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request11Body.FormPostParameters.Add("columns[3][search][value]", "");
            request11Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[4][data]", "4");
            request11Body.FormPostParameters.Add("columns[4][name]", "");
            request11Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[4][search][value]", "");
            request11Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[5][data]", "5");
            request11Body.FormPostParameters.Add("columns[5][name]", "");
            request11Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[5][search][value]", "");
            request11Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[6][data]", "6");
            request11Body.FormPostParameters.Add("columns[6][name]", "");
            request11Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[6][search][value]", "");
            request11Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[7][data]", "7");
            request11Body.FormPostParameters.Add("columns[7][name]", "");
            request11Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[7][search][value]", "");
            request11Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[8][data]", "8");
            request11Body.FormPostParameters.Add("columns[8][name]", "");
            request11Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[8][search][value]", "");
            request11Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[9][data]", "9");
            request11Body.FormPostParameters.Add("columns[9][name]", "");
            request11Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[9][search][value]", "");
            request11Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[10][data]", "10");
            request11Body.FormPostParameters.Add("columns[10][name]", "");
            request11Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[10][search][value]", "");
            request11Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request11Body.FormPostParameters.Add("columns[11][data]", "11");
            request11Body.FormPostParameters.Add("columns[11][name]", "");
            request11Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request11Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request11Body.FormPostParameters.Add("columns[11][search][value]", "");
            request11Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request11Body.FormPostParameters.Add("order[0][column]", "1");
            request11Body.FormPostParameters.Add("order[0][dir]", "asc");
            request11Body.FormPostParameters.Add("start", "0");
            request11Body.FormPostParameters.Add("length", "10");
            request11Body.FormPostParameters.Add("search[value]", "webtest");
            request11Body.FormPostParameters.Add("search[regex]", this.Context["FormPostParam556.search[regex]"].ToString());
            request11.Body = request11Body;
            yield return request11;
            request11 = null;

            WebTestRequest request12 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/DeleteUser"));
            request12.ThinkTime = 14;
            request12.Method = "POST";
            request12.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request12.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request12.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request12Body = new FormPostHttpBody();
            request12Body.FormPostParameters.Add("guid", this.Context["UserGUID"].ToString());
            request12.Body = request12Body;
            yield return request12;
            request12 = null;

            WebTestRequest request13 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/DeleteUser"));
            request13.ThinkTime = 13;
            request13.Method = "POST";
            request13.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request13.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request13.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request13Body = new FormPostHttpBody();
            request13Body.FormPostParameters.Add("guid", this.Context["UserGUID"].ToString());
            request13.Body = request13Body;
            yield return request13;
            request13 = null;

            WebTestRequest request14 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/User/GetUsersByFilterAjax"));
            request14.ThinkTime = 5;
            request14.Method = "POST";
            request14.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request14.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request14.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            FormPostHttpBody request14Body = new FormPostHttpBody();
            request14Body.FormPostParameters.Add("draw", this.Context["FormPostParam713.draw"].ToString());
            request14Body.FormPostParameters.Add("columns[0][data]", "0");
            request14Body.FormPostParameters.Add("columns[0][name]", "");
            request14Body.FormPostParameters.Add("columns[0][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[0][orderable]", "true");
            request14Body.FormPostParameters.Add("columns[0][search][value]", "");
            request14Body.FormPostParameters.Add("columns[0][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[1][data]", "1");
            request14Body.FormPostParameters.Add("columns[1][name]", "");
            request14Body.FormPostParameters.Add("columns[1][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[1][orderable]", "true");
            request14Body.FormPostParameters.Add("columns[1][search][value]", "");
            request14Body.FormPostParameters.Add("columns[1][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[2][data]", "2");
            request14Body.FormPostParameters.Add("columns[2][name]", "");
            request14Body.FormPostParameters.Add("columns[2][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[2][orderable]", "true");
            request14Body.FormPostParameters.Add("columns[2][search][value]", "");
            request14Body.FormPostParameters.Add("columns[2][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[3][data]", "3");
            request14Body.FormPostParameters.Add("columns[3][name]", "");
            request14Body.FormPostParameters.Add("columns[3][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[3][orderable]", "true");
            request14Body.FormPostParameters.Add("columns[3][search][value]", "");
            request14Body.FormPostParameters.Add("columns[3][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[4][data]", "4");
            request14Body.FormPostParameters.Add("columns[4][name]", "");
            request14Body.FormPostParameters.Add("columns[4][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[4][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[4][search][value]", "");
            request14Body.FormPostParameters.Add("columns[4][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[5][data]", "5");
            request14Body.FormPostParameters.Add("columns[5][name]", "");
            request14Body.FormPostParameters.Add("columns[5][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[5][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[5][search][value]", "");
            request14Body.FormPostParameters.Add("columns[5][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[6][data]", "6");
            request14Body.FormPostParameters.Add("columns[6][name]", "");
            request14Body.FormPostParameters.Add("columns[6][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[6][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[6][search][value]", "");
            request14Body.FormPostParameters.Add("columns[6][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[7][data]", "7");
            request14Body.FormPostParameters.Add("columns[7][name]", "");
            request14Body.FormPostParameters.Add("columns[7][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[7][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[7][search][value]", "");
            request14Body.FormPostParameters.Add("columns[7][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[8][data]", "8");
            request14Body.FormPostParameters.Add("columns[8][name]", "");
            request14Body.FormPostParameters.Add("columns[8][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[8][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[8][search][value]", "");
            request14Body.FormPostParameters.Add("columns[8][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[9][data]", "9");
            request14Body.FormPostParameters.Add("columns[9][name]", "");
            request14Body.FormPostParameters.Add("columns[9][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[9][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[9][search][value]", "");
            request14Body.FormPostParameters.Add("columns[9][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[10][data]", "10");
            request14Body.FormPostParameters.Add("columns[10][name]", "");
            request14Body.FormPostParameters.Add("columns[10][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[10][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[10][search][value]", "");
            request14Body.FormPostParameters.Add("columns[10][search][regex]", "false");
            request14Body.FormPostParameters.Add("columns[11][data]", "11");
            request14Body.FormPostParameters.Add("columns[11][name]", "");
            request14Body.FormPostParameters.Add("columns[11][searchable]", "true");
            request14Body.FormPostParameters.Add("columns[11][orderable]", "false");
            request14Body.FormPostParameters.Add("columns[11][search][value]", "");
            request14Body.FormPostParameters.Add("columns[11][search][regex]", "false");
            request14Body.FormPostParameters.Add("order[0][column]", "1");
            request14Body.FormPostParameters.Add("order[0][dir]", "asc");
            request14Body.FormPostParameters.Add("start", "0");
            request14Body.FormPostParameters.Add("length", "10");
            request14Body.FormPostParameters.Add("search[value]", this.Context["email"].ToString());
            request14Body.FormPostParameters.Add("search[regex]", this.Context["FormPostParam762.search[regex]"].ToString());
            request14.Body = request14Body;
            yield return request14;
            request14 = null;

            WebTestRequest request15 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Account/Logout"));
            request15.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Account/Login");
            request15.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/User")));
            yield return request15;
            request15 = null;
        }
    }
}
