//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegressionTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using PluginLibrary;


    public class AdministrationTeamCRUDCoded : WebTest
    {

        public AdministrationTeamCRUDCoded()
        {
            this.Context.Add("WebServer1", "http://oyezgateway.test.gowi.rs");
            this.Context.Add("TEAM NAME", "WEB TEST X0001");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            //if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            //{
            //    ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
            //    this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            //}
            //if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            //{
            //    ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
            //    validationRule2.Tolerance = 0D;
            //    this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            //}

            WebTestRequest request1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/"));
            request1.ReportingName = "Home";
            request1.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Account/Login");
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Account/Login"));
            request2.ReportingName = "Login";
            request2.Method = "POST";
            request2.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/Report");
            request2.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Account/Login")));
            FormPostHttpBody request2Body = new FormPostHttpBody();
            request2Body.FormPostParameters.Add("ReturnUrl", this.Context["$HIDDEN1.ReturnUrl"].ToString());
            request2Body.FormPostParameters.Add("UserName", "admin.milan.papulic@gowi.rs");
            request2Body.FormPostParameters.Add("Password", "password");
            request2.Body = request2Body;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/Group"));
            request3.ReportingName = "Team administration";
            request3.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Report")));
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/Group/Create"));
            request4.ReportingName = "Create new team";
            request4.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Group")));
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/Admin/Group/Create"));
            request5.ReportingName = "Save new team";
            request5.Method = "POST";
            request5.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/Group");
            request5.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Group/Create")));
            FormPostHttpBody request5Body = new FormPostHttpBody();
            request5Body.FormPostParameters.Add("Name", this.Context["TEAM NAME"].ToString());
            request5.Body = request5Body;
            ExtractTeamEdit extractionRule2 = new ExtractTeamEdit();
            extractionRule2.TeamName = this.Context["TEAM NAME"].ToString();
            extractionRule2.TeamID = "";
            extractionRule2.ContextParameterName = "NewTeam";
            request5.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest((this.Context["WebServer1"].ToString()
                            + ("/Admin/Group/Edit/" + this.Context["NewTeam"].ToString())));
            request6.ReportingName = "Edit team";
            request6.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Group")));
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest((this.Context["WebServer1"].ToString()
                            + ("/Admin/Group/Edit/" + this.Context["NewTeam"].ToString())));
            request7.ReportingName = "Save team";
            request7.Method = "POST";
            request7.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/Group");
            request7.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString()
                                + ("/Admin/Group/Edit/" + this.Context["NewTeam"].ToString()))));
            FormPostHttpBody request7Body = new FormPostHttpBody();
            request7Body.FormPostParameters.Add("Id", this.Context["NewTeam"].ToString());
            request7Body.FormPostParameters.Add("Name", (this.Context["TEAM NAME"].ToString() + "- EDIT"));
            request7.Body = request7Body;
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest((this.Context["WebServer1"].ToString()
                            + ("/Admin/Group/Delete/" + this.Context["NewTeam"].ToString())));
            request8.ReportingName = "Delete team";
            request8.ExpectedResponseUrl = (this.Context["WebServer1"].ToString() + "/Admin/Group");
            request8.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["WebServer1"].ToString() + "/Admin/Group")));
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule3 = new ValidationRuleFindText();
                validationRule3.FindText = this.Context["TEAM NAME"].ToString();
                validationRule3.IgnoreCase = false;
                validationRule3.UseRegularExpression = false;
                validationRule3.PassIfTextFound = false;
                request8.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule3.Validate);
            }
            yield return request8;
            request8 = null;
        }
    }
}
